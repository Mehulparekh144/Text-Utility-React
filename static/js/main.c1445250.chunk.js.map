{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","count","setVowels","Fragment","heading","style","backgroundColor","color","rows","value","onChange","event","target","length","showAlert","newText","toLocaleUpperCase","toLocaleLowerCase","newCount","match","document","getElementById","select","navigator","clipboard","writeText","split","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c1445250.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { a } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */} \r\n              {/* React Router  */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link \" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch mx-3\">\r\n              <input\r\n                // className={`form-check-input text-${props.mode}.`}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className={`form-check-label text-${props.mode === 'light'?'dark' :'light'}`} htmlFor=\"flexSwitchCheckDefault\">\r\n                {props.mode === 'dark'?'Enable light mode':'Enable dark mode'}\r\n              </label>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Upper case was clicked\");\r\n    if (text.length <= 0){\r\n      props.showAlert(\"Please enter some text for utility\" ,\"warning\")\r\n    }\r\n\r\n    else{\r\n    let newText = text.toLocaleUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case !\" , \"success\")\r\n    }\r\n  };\r\n\r\n  const clearText = () =>{\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\" ,\"success\")\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"Upper case was clicked\");\r\n    if (text.length <= 0){\r\n      props.showAlert(\"Please enter some text for utility\" ,\"warning\")\r\n    }\r\n\r\n    else{\r\n    let newText = text.toLocaleLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case !\" , \"success\")\r\n    }\r\n\r\n  };\r\n  const handleVowelClick = () => {\r\n    let newCount = text.match(/[aeiou]/gi).length;\r\n    setVowels(newCount);\r\n\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById('myBox')\r\n    if (text.value.length <= 0){\r\n      props.showAlert(\"Please enter some text to be copied\" ,\"warning\")\r\n    }\r\n    else{\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to your clipboard !\" ,\"success\")\r\n  }\r\n  }\r\n\r\n  \r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"on Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const[count , setVowels] = useState(0);\r\n  // text= \"Some value\" Wrong way to change state\r\n  // setText(\"new val\") Correct way\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myBox\" className=\"form-label\">\r\n          <h1 className=\"display-3\">{props.heading}</h1>\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          style={{backgroundColor: props.mode=== 'dark'?'#212529':'white' , color: props.mode === 'dark'?'white':'black'}}\r\n          id=\"myBox\"\r\n          rows=\"7\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n        ></textarea>\r\n      </div>\r\n      <button className={`btn btn-${props.mode=== 'dark'?'outline-primary' : \"primary\"}`} onClick={handleUpClick}>\r\n        Convert to UpperCase\r\n      </button>\r\n      <button className={`btn btn-${props.mode=== 'dark'?'outline-primary' : \"primary\"} mx-2`} onClick={handleLoClick}>\r\n        Convert to LowerCase\r\n      </button>\r\n      <button className={`btn btn-${props.mode=== 'dark'?'outline-primary' : \"primary\"} mx-2`} onClick={handleVowelClick}>\r\n        Count Vowels\r\n      </button>\r\n      <button className={`btn btn-${props.mode=== 'dark'?'outline-primary' : \"primary\"} mx-2`} onClick={handleCopy}>\r\n        Copy Text\r\n      </button>\r\n      <button className=\"btn btn-danger mx-2\" onClick={clearText}>\r\n        Clear Text\r\n      </button>\r\n     \r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h2 className=\"display-5\">Text summary</h2>\r\n        <p className=\"lead\"><b>{text.split(\" \").length}</b> words and <b>{text.length} characters</b></p>\r\n        <p className=\"lead\"> You can read in <b>{0.008 * text.split(\" \").length}</b> minutes </p>\r\n        <p className=\"lead\"> No. of Vowels : <b>{count}</b></p>\r\n        <h4 className=\"display-6\">Preview</h4>\r\n        <p className=\"lead\">{text.length>0?text:'Enter text to preview'}</p>\r\n\r\n    </div>\r\n    </>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLocaleLowerCase();\r\n        return lower.charAt(0).toLocaleUpperCase() + lower.slice(1) ;\r\n\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}  role=\"alert\">\r\n  \r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport React from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#0b0d0e';\n      document.body.style.color = 'white';\n      showAlert(\"Dark Mode has been enabled \", \"success\");\n\n\n\n\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light Mode has been enabled \", \"success\");\n      // document.title = \"Text Utility - Light Mode\"\n\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text Utility\" mode={mode} toggleMode={toggleMode} />\n\n      <Alert alert={alert} />\n      <div className=\"container my-3\">  <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} title=\"Text Utility\" />\n      </div>\n      {/* <Routes>\n          <Route exact path=\"/about\" element={<About />}/>  \n          <Route exact path=\"/\" element= {<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} title=\"Text Utility\"/>}/>\n      </Routes>   */}\n      {/* </Router> */}\n\n\n\n\n\n    </>\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}